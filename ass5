Hello student
[student@shell ~]$ su
Password: 
[root@shell student]# /etc/init.d/oracle-xe restart
Restarting oracle-xe (via systemctl):  cd /u01/app/oracle/p[  OK  ]1.2.0/xe/bin
[root@shell student]# cd /u01/app/oracle/product/11.2.0/xe/bin
[root@shell bin]# . ./oracle_env.sh
[root@shell bin]# sqlplus system

SQL*Plus: Release 11.2.0.2.0 Production on Tue Jul 24 10:49:15 2018

Copyright (c) 1982, 2011, Oracle.  All rights reserved.

Enter password: 
				
				(system)

Connected to:
Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

SQL> prompt

SQL> set serveroutput on


SQL> declare
  2  cid number;
  3  begin
  4  cid:=&id;													(note that right hand side can be anything you want)
  5  dbms_output.put_line(cid);
  6  exception
  7  when no_data_found then   
  8  dbms_output.put_line('cust doesnt exist');
  9  END;
 10  /
Enter value for id: 50
old   4: cid:=&id;
new   4: cid:=50;
50

PL/SQL procedure successfully completed.




SQL> CREATE TABLE Customer(Cust_id integer, Name varchar(50), DateOfPayment date, NameofScheme varchar(20), Status varchar(20));

Table created.

SQL> ALTER TABLE Customer ADD PRIMARY KEY (Cust_id);

Table altered.

SQL> CREATE TABLE Fine(Cust_id integer, Dates Date, Amt integer, FOREIGN KEY(Cust_id) REFERENCES Customer(Cust_id) ON DELETE CASCADE);

Table created.

SQL> ALTER TABLE Fine MODIFY Cust_id integer not null;

Table altered.

==========================================1. Accept Cust_id & name of scheme from user.============================================

SQL> DECLARE
Cid number;
Name varchar(50);
DOP date;
NOS varchar(20);
Status varchar(20);
BEGIN
Cid:=&id;
Name:=&name;
DOP:=&dateofpayment;
NOS:=&nameofscheme;
Status:=&status;
INSERT INTO Customer VALUES (Cid,Name,DOP,NOS,Status);
EXCEPTION
WHEN no_data_found THEN
dbms_output.put_line('cust doesnt exist');
END;
/  2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18  
Enter value for id: 1
old   8: Cid:=&id;
new   8: Cid:=1;
Enter value for name: 'Jay'
old   9: Name:=&name;
new   9: Name:='Jay';
Enter value for dateofpayment: '24-Mar-2018'
old  10: DOP:=&dateofpayment;
new  10: DOP:='24-Mar-2018';
Enter value for nameofscheme: '499 Rupees'
old  11: NOS:=&nameofscheme;
new  11: NOS:='499 Rupees';
Enter value for status: 'Paid'
old  12: Status:=&status;
new  12: Status:='Paid';

PL/SQL procedure successfully completed.

SQL> select * from Customer;

   CUST_ID NAME 					                          DATEOFPAYMENT		 NAMEOFSCHEME		  STATUS
---------- -------------------------------------------------- ------------------ -------------------- --------------------
	 	 1 Jay						      					  24-MAR-18          499 Rupees	          Paid



=======2. Check the number of days (from date of payment), if days are between 15 to 30 then fine amount will be Rs 5per day=======

SQL> INSERT INTO Customer values(3, 'Tejas', '14-July-2018', '499 Rupees', 'Not Paid');
1 row created.

SQL> DECLARE
fine_day number;
Cid number;
DOP date;
Dates date;
Status varchar(20);
BEGIN
dbms_output.put_line('Enter a customer id: ');
Cid:=&id;
SELECT Status INTO Status FROM Customer WHERE Cust_id = Cid;
SELECT DateOfPayment INTO DOP FROM Customer Where Cust_id = Cid;
Dates:=sysdate();
fine_day:=Dates - DOP;
IF(Status='Paid') THEN
dbms_output.put_line('Due already paid');
ELSE
BEGIN
IF(fine_day>15 AND fine_day<30) THEN 
dbms_output.put_line('Due not paid yet');
INSERT INTO Fine VALUES(Cid,Dates,fine_day*5);
ELSIF(fine_day<15) THEN 
dbms_output.put_line('Fine hasnt started yet');
END IF;
END;
END IF;
EXCEPTION 
WHEN no_data_found THEN
dbms_output.put_line('Customer Database empty');
END;
/

Enter value for id: '3'
old   9: Cid:=&id;
new   9: Cid:='3';
Enter a customer id:
Due not paid yet

PL/SQL procedure successfully completed.

SQL> select * from Fine;

   CUST_ID DATES		     AMT
---------- ------------------ ----------
	 3 	   31-JUL-18		      17
	 
	 
	 
=================3. If no. of days>30, per day fine will be Rs 50 per day & for days less than 30, Rs. 5 per day.==================

SQL> INSERT INTO Customer VALUES(5,'Rucha','28-JUNE-2018','499 Rupees', 'Not Paid');

1 row created.

SQL> DECLARE
fine_day number;
Cid number;
DOP date;
Dates date;
Status varchar(20);
EXC EXCEPTION;
BEGIN
dbms_output.put_line('Enter a customer id: ');
Cid:=&id;
SELECT Status INTO Status FROM Customer WHERE Cust_id = Cid;
SELECT DateOfPayment INTO DOP FROM Customer Where Cust_id = Cid;
Dates:=sysdate();
fine_day:=Dates - DOP;
IF(Status='Paid') THEN
dbms_output.put_line('Due already paid');
ELSE
BEGIN
IF(fine_day>30) THEN
dbms_output.put_line('Due not paid yet');
INSERT INTO Fine VALUES(Cid,Dates,fine_day*50);
ELSIF(fine_day>0 AND fine_day<30) THEN 
dbms_output.put_line('Due not paid yet');
INSERT INTO Fine VALUES(Cid,Dates,fine_day*5);
ELSIF(fine_day<0) THEN 
dbms_output.put_line('Fine hasnt started yet');
ELSE
RAISE EXC;
END IF;
END;
END IF;
EXCEPTION 
WHEN no_data_found THEN
dbms_output.put_line('Customer Database empty');
END;
/

Enter value for id: '5'
old  10: Cid:=&id;
new  10: Cid:='5';
Enter a customer id:
Due not paid yet

PL/SQL procedure successfully completed.

SQL> select * from Fine;

   CUST_ID DATES		     AMT
---------- ------------------ ----------
	 3 31-JUL-18		      17
	 5 31-JUL-18		    1675



